from calibre.web.feeds.recipes import BasicNewsRecipe
import re
from collections import defaultdict
import pdb

class Git_Pocket_Guide(BasicNewsRecipe):
# Rg '<li class="chapter' %
    title = 'MiniDecaf'
    description = ''
    url_prefix = ''
    no_stylesheets = True
    dic = dict(name='div',class_="search-results")
    remove_tags_after = dic
# h1 class="search-results-title"
    remove_tags_before = dict(id = "book-search-results")
    remove_tags = [dic]

    def parse_index(self):
        ret=[]
        url_prefix = 'https://decaf-lang.github.io/minidecaf-tutorial/'
        soup = self.index_to_soup(url_prefix)
        chap_dict = defaultdict(list)
        pat=re.compile(r'(step\d+)/')
        name_dict = dict()

        for link in soup.findAll('li',class_='chapter'):
            link_url = link.attrs.get('data-path')
            if link_url:
                match_obj = pat.search(link_url)
                link_key = match_obj.group(1) if match_obj else "appendix"
                chap_dict[link_key].append({ 'url': url_prefix + link_url, 'title': link.a.string.strip(), 'date':None, 'description':None, 'content':None })
            else:
                # step5：局部变量和赋值
                chap_title=link.span.string.strip().replace(" ", '').replace('：',':')
                #  import pdb; pdb.set_trace()
                if chap_title.startswith("step"):
                    name_dict[pat.match(chap_title).group(1)] = chap_title
                #  match_obj = 
                #  if match_obj:
                else:
                    name_dict["appendix"] = chap_title
        pdb.set_trace()
        for (key,value) in chap_dict.items():
            ret.append((name_dict.get(key) if name_dict.get(key) else key, value))
        return ret
